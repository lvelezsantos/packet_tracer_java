/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import logica.Conexion;
import logica.Dispositivo;
import logica.Router;

/**
 *
 * @author minrock
 */
public class principal extends javax.swing.JFrame {

    private String selected = "";
    private int selectedr = -1;
    private int selectedp = -1;
    private int sel = 0;
    private boolean panel = false;
    private String kind = "none";
    private Dispositivo d1 = null;
    private Dispositivo d2 = null;
    String d1c1= "";
    String d2c1= "";
    
    /**
     * Creates new form principal
     */
    public principal() {
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButtonExportar = new javax.swing.JButton();
        jButtonImportar = new javax.swing.JButton();
        jPanel4 = new PanelCentral();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Image/router1.png"))); // NOI18N
        jLabel2.setText("Router");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Image/pc1.png"))); // NOI18N
        jLabel1.setText("PC");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Image/eth.png"))); // NOI18N
        jLabel3.setText("Conexiones");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Image/Terminal Icon.jpg"))); // NOI18N
        jLabel6.setText("Terminal");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jButtonExportar.setText("Exportar");
        jButtonExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportarActionPerformed(evt);
            }
        });

        jButtonImportar.setText("Importar");
        jButtonImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExportar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonImportar)
                .addGap(0, 173, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jButtonImportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMaximumSize(new java.awt.Dimension(800, 600));
        jPanel4.setMinimumSize(new java.awt.Dimension(800, 600));
        jPanel4.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel4MouseReleased(evt);
            }
        });
        jPanel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel4MouseDragged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        if(choque(new Point(evt.getX(),evt.getY())).equalsIgnoreCase("false")){
        if(selected.equalsIgnoreCase("router")){
        jPanel4.getCon().add_router(evt.getPoint());
        }else if(selected.equalsIgnoreCase("pc")){
        jPanel4.getCon().add_pc(new Point(evt.getX(),evt.getY()));
        }
        }
        if(selected.equalsIgnoreCase("term") && !choque(evt.getPoint()).equalsIgnoreCase("false")){
        iniciar_Consola(evt.getPoint());
        }
        if(selected.equalsIgnoreCase("conn")){
            
            Dispositivo d11 = disxpoint(evt.getPoint());
            if(d11 != null){
                System.out.println("A conectar");
                if(d1 == null){
                    d1 = d11;
                    System.out.println("Dispositivo 1 seleccionado");
                }else{
                    d2 = d11;
                    System.out.println("Dispositivo 2 seleccionado");
                    connect();
                }
            
                
            }
        }
        imprimir();
        jPanel4.repaint();
        
           
        
    }//GEN-LAST:event_jPanel4MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        if(selected.equalsIgnoreCase("router")){
        selected = "none";
        jLabel2.setBorder(null);
        }else{
        selected = "router";
        jLabel2.setBorder(new LineBorder(Color.blue, 2));
        }
        panel = false;
//        this.jPanel3.setVisible(panel);
        jLabel1.setBorder(null);
        jLabel3.setBorder(null);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        if(selected.equalsIgnoreCase("pc")){
        selected = "none";
        jLabel1.setBorder(null);
        }else{
        selected = "pc";
        jLabel1.setBorder(new LineBorder(Color.blue, 2));
        }
        panel = false;
//        this.jPanel3.setVisible(panel);
        jLabel2.setBorder(null);
        jLabel3.setBorder(null);
        jLabel6.setBorder(null);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jPanel4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseDragged
        if(!choque(evt.getPoint()).contains("false")){
        if(sel == 1){
            if(selectedr != -1){
                jPanel4.getCon().routers.get(selectedr).setPoint(evt.getPoint());//set(selectedr, evt.getPoint());
            }else if(selectedp != -1){
                jPanel4.getCon().pcs.get(selectedp).setPoint(evt.getPoint());
            }
        }
        this.jPanel4.repaint();
        }
        
    }//GEN-LAST:event_jPanel4MouseDragged

    private void jPanel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MousePressed
        String resp = choque(new Point(evt.getX(),evt.getY()));
            if(resp.contains("router")){
                String num = resp.substring(6);
                System.out.println("Router numero : " +num);
                selectedr = Integer.parseInt(num);
                sel = 1;
            }else if(resp.contains("pc")){
                String num = resp.substring(2);
                System.out.println("Pc numero : " +num);
                selectedp = Integer.parseInt(num);
                sel = 1;
            }
    }//GEN-LAST:event_jPanel4MousePressed

    private void jPanel4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseReleased
        sel =0;
        selectedr = selectedp = -1;
    }//GEN-LAST:event_jPanel4MouseReleased

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        if(selected.equalsIgnoreCase("conn")){
        selected = "none";
        jLabel3.setBorder(null);
        }else{
        selected = "conn";
        jLabel3.setBorder(new LineBorder(Color.blue, 2));
        }
        this.panel = true;
        //this.jPanel3.setVisible(panel);
        jLabel1.setBorder(null);
        jLabel2.setBorder(null);
        jLabel6.setBorder(null);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        if(selected.equalsIgnoreCase("term")){
        selected = "none";
        jLabel6.setBorder(null);
        }else{
        selected = "term";
        jLabel6.setBorder(new LineBorder(Color.blue, 2));
        }
        this.panel = true;
        //this.jPanel3.setVisible(panel);
        jLabel1.setBorder(null);
        jLabel2.setBorder(null);
        jLabel3.setBorder(null);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jButtonExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportarActionPerformed
        exportar();
    }//GEN-LAST:event_jButtonExportarActionPerformed

    private void jButtonImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImportarActionPerformed
        importar();
    }//GEN-LAST:event_jButtonImportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExportar;
    private javax.swing.JButton jButtonImportar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private PanelCentral jPanel4;
    // End of variables declaration//GEN-END:variables

    private void imprimir() {
        for(int i=0; i<jPanel4.getCon().routers.size();i++){
        System.out.println("Router -> "+jPanel4.getCon().routers.get(i).toString());
        }
        for(int i=0; i<jPanel4.getCon().pcs.size();i++){
        System.out.println("PC -> "+jPanel4.getCon().pcs.get(i).toString());
        }        
    }
    
    private String choque(Point p){
        
        for(int i=0;i<jPanel4.getCon().routers.size();i++){
            if(p.y>=jPanel4.getCon().routers.get(i).getPoint().y-40 && p.y <= jPanel4.getCon().routers.get(i).getPoint().y + 40){
                if(p.x>=jPanel4.getCon().routers.get(i).getPoint().x-40 && p.x <= jPanel4.getCon().routers.get(i).getPoint().x + 40){
                    
                    return "router"+i;
                    
                }
            }
        }
        
        for(int i=0;i<jPanel4.getCon().pcs.size();i++){
            if(p.y>=jPanel4.getCon().pcs.get(i).getPoint().y-40 && p.y <= jPanel4.getCon().pcs.get(i).getPoint().y + 40){
                if(p.x>=jPanel4.getCon().pcs.get(i).getPoint().x-40 && p.x <= jPanel4.getCon().pcs.get(i).getPoint().x + 40){
                    
                    return "pc"+i;
                    
                }
            }
        }
        
        if(p.y<0 || p.y> jPanel4.getHeight() || p.x<0 || p.x>jPanel4.getWidth()){
            return "pared";
        }
        
        
        
        return "false";
    }
    
    
    
    
    public Dispositivo disxpoint(Point p){
    System.out.println("Encontrar dispositivo");
        Dispositivo dre = null;
        for(int i=0;i<jPanel4.getCon().routers.size();i++){
            if(p.y>=jPanel4.getCon().routers.get(i).getPoint().y-40 && p.y <= jPanel4.getCon().routers.get(i).getPoint().y + 40){
                if(p.x>=jPanel4.getCon().routers.get(i).getPoint().x-40 && p.x <= jPanel4.getCon().routers.get(i).getPoint().x + 40){
                    
                    dre = jPanel4.getCon().routers.get(i);
                    
                }
            }
        }
        
        for(int i=0;i<jPanel4.getCon().pcs.size();i++){
            if(p.y>=jPanel4.getCon().pcs.get(i).getPoint().y-40 && p.y <= jPanel4.getCon().pcs.get(i).getPoint().y + 40){
                if(p.x>=jPanel4.getCon().pcs.get(i).getPoint().x-40 && p.x <= jPanel4.getCon().pcs.get(i).getPoint().x + 40){
                    
                    dre =jPanel4.getCon().pcs.get(i);
                    
                }
            }
        }
        
        return dre;
    
    }

    private void connect() {
        System.out.println("Connect :"+d1.getId()+" <> "+d2.getId());
                
        if(jPanel4.getCon().tipo_dispositivo(d1.getId()).equalsIgnoreCase("pc")){
        d1c1 = "0/0";
        }else{
        d1c1 = JOptionPane.showInputDialog("Digite el conector y el modulo del router "+d1.getId()+" (modulo/conector)\n"+d1.mostrarPuertos());
        }
        if(jPanel4.getCon().tipo_dispositivo(d2.getId()).equalsIgnoreCase("pc")){
        d2c1 = "0/0";
        }else{
        d2c1 = JOptionPane.showInputDialog("Digite el conector y el modulo del router "+d1.getId()+" (modulo/conector)\n"+d2.mostrarPuertos());
        }
        try{
        jPanel4.getCon().connect(d1.getId(), d2.getId(), d1c1.charAt(2)+"",d2c1.charAt(2)+"", d1c1.charAt(0)+"", d2c1.charAt(0)+"");
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e.getMessage());
        }
        d1 = null;
        d2 = null;
    }

    private void iniciar_Consola(Point point) {
        Dispositivo a = disxpoint(point);
        System.out.println("bout show console");
        if(jPanel4.getCon().tipo_dispositivo(a.getId()).equalsIgnoreCase("router")){
            JDialogConsola jd = new JDialogConsola(null,true, jPanel4.getCon(), a.getId());
            jd.setVisible(true);
        }else{
            String ip = JOptionPane.showInputDialog("Digite la IP del computador");
            a.getModulos().get(0).getPuertos().get(0).setIp(ip);
            String netmask = JOptionPane.showInputDialog("Digite la mascara de red del computador");
            a.getModulos().get(0).getPuertos().get(0).setNetmask(netmask);
            JOptionPane.showMessageDialog(null, a.mostrar_informacion());
        }
    }
    
    private void exportar() {
        JFileChooser jf = new JFileChooser();
        jf.setMultiSelectionEnabled(false);
        int r =jf.showSaveDialog(jf); 
        if(r == JFileChooser.APPROVE_OPTION){
            try {
                FileOutputStream bs = new FileOutputStream(jf.getSelectedFile());
                ObjectOutputStream os;
                System.out.println("Serializando");
                os = new ObjectOutputStream(bs);
                os.writeObject(this.jPanel4.getCon());  // this es de tipo DatoUdp
                os.close();
                JOptionPane.showMessageDialog(null, "El archivo se ha exportado exitosamente");
            } catch (IOException ex) {
                Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private void importar() {
        JFileChooser jf = new JFileChooser();
        jf.setMultiSelectionEnabled(false);
        int r =jf.showOpenDialog(jf);
        if(r == JFileChooser.APPROVE_OPTION){
             ObjectInputStream entrada;
            try {
                entrada = new ObjectInputStream(new FileInputStream(jf.getSelectedFile()));                
                jPanel4.setCon((Controlador) entrada.readObject());
                System.out.println(jPanel4.getCon());
                
                JOptionPane.showMessageDialog(null, "Controlador importado con exito");
                this.repaint();
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null , "Error al escoger el archivo");
            }


        }
    }

    
}
